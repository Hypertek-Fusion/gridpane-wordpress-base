{"version":3,"file":"admin.js","sources":["../admin/js/admin-scripts.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function() {\n    const urlParams = new URLSearchParams(window.location.search);\n\n    if(urlParams.get('page') && urlParams.get('page') === 'hypersite-reviews-setup') getUsers();\n});\n\nfunction getAccountLocationsUrl(accountId) {\n    return HSRevApi.urls.accountLocationsBase.replace('%s', accountId);\n}\n\nlet reviewsPage = 1;\nlet perPage = 10; // Default reviews per page\n\n// Initialize selected reviews set\nwindow.HSRevData = window.HSRevData || {};\nwindow.HSRevData.data = window.HSRevData.data || {};\nwindow.HSRevData.data.selectedReviews = new Set();\n\nconst getUsers = async () => {\n    try {\n        const accountRowsContainer = document.getElementById('account-rows');\n        accountRowsContainer.innerHTML = '';\n        const loading = document.createElement('div');\n        loading.style.textAlign = 'center';\n        loading.innerText = 'Fetching accounts. Please wait ...';\n        loading.classList.add('account-row-item');\n        accountRowsContainer.appendChild(loading);\n\n        const response = await fetch(HSRevApi.urls.accounts, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-WP-Nonce': HSRevApi.nonce\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok ' + response.statusText);\n        }\n\n        const data = await response.json();\n        console.log(data);\n        populateAccounts(data);\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n    }\n};\n\nconst populateAccounts = async (accountsData) => {\n    const accountRowsContainer = document.getElementById('account-rows');\n    const accountRows = [];\n\n    await Promise.all(accountsData.accounts.map(async account => {\n        const accountId = account.account_id;\n        const accountLength = await getAccountLocationsLength(accountId);\n\n        if (accountLength > 0) {\n            const accountRow = document.createElement('div');\n            accountRow.classList.add('rows');\n            accountRow.innerHTML = `\n                <div class=\"row-item\" data-account-id=\"${accountId}\">\n                    <input type=\"checkbox\" name=\"selected-account\" value=\"${accountId}\">\n                    <div class=\"row-item__cell\" data-type=\"name\">${accountId}</div>\n                    <div class=\"row-item__cell\" data-type=\"account-name\">${account.account_name}</div>\n                    <div class=\"row-item__cell\" data-type=\"type\">${account.type}</div>\n                    <div class=\"row-item__cell\" data-type=\"location-count\">${accountLength}</div>\n                </div>\n            `;\n            accountRows.push(accountRow);\n        }\n    }));\n\n    accountRowsContainer.innerHTML = '';\n    accountRowsContainer.append(...accountRows);\n\n    if (window.HSRevData.functions.attachCheckboxListeners) {\n        window.HSRevData.functions.attachCheckboxListeners(accountRowsContainer);\n    }\n};\n\nconst getAccountLocationsLength = async (accountId) => {\n    try {\n        const url = HSRevApi.urls.totalAccountLocations.replace('%s', accountId.replace('accounts/', ''));\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-WP-Nonce': HSRevApi.nonce\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok ' + response.statusText);\n        }\n\n        const data = await response.json();\n        console.log('Location length data:', data);\n        return data.total || 0;\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n    }\n};\n\nconst getLocations = async (accountId) => {\n    const locationRowsContainer = document.getElementById('location-rows');\n    const locationsCache = window.HSRevData.data.locationsCache || {};\n\n    // Use cached data if available\n    if (locationsCache[accountId]) {\n        console.log('Using cached locations');\n        populateLocations(locationsCache[accountId]);\n        return;\n    }\n\n    // Show loading message\n    locationRowsContainer.innerHTML = '<div style=\"text-align: center;\" class=\"row-item\">Fetching locations. Please wait ...</div>';\n\n    try {\n        const url = getAccountLocationsUrl(accountId.replace('accounts/', ''));\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-WP-Nonce': HSRevApi.nonce\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok ' + response.statusText);\n        }\n\n        const locationsData = await response.json();\n        locationsCache[accountId] = locationsData;\n        window.HSRevData.data.locationsCache = locationsCache;\n\n        console.log('Locations for Account:', locationsData);\n        populateLocations(locationsData);\n\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n        locationRowsContainer.innerHTML = '<div style=\"text-align: center;\" class=\"row-item\">Error fetching locations. Please try again later.</div>';\n    }\n};\n\nconst populateLocations = async (locationsData) => {\n    const locationRowsContainer = document.getElementById('location-rows');\n    const locationRows = [];\n\n    const locationsArray = locationsData.locations;\n\n    await Promise.all(locationsArray.map(async location => {\n        if (window.HSRevData.data.accountId) {\n            const reviewCount = await getLocationReviewCount(window.HSRevData.data.accountId, location.location_id);\n            const locationRow = document.createElement('div');\n            locationRow.classList.add('rows');\n            locationRow.innerHTML = `\n                <div class=\"row-item\" data-location-id=\"${location.location_id}\">\n                    <input type=\"checkbox\" name=\"selected-location\" value=\"${location.location_id}\">\n                    <div class=\"row-item__cell\" data-type=\"id\">${location.location_id}</div>\n                    <div class=\"row-item__cell\" data-type=\"name\">${location.title}</div>\n                    <div class=\"row-item__cell\" data-type=\"review-count\">${reviewCount}</div>\n                </div>\n            `;\n            locationRows.push(locationRow);\n        }\n    }));\n\n    locationRowsContainer.innerHTML = '';\n    locationRowsContainer.append(...locationRows);\n\n    if (window.HSRevData.functions.attachCheckboxListeners) {\n        window.HSRevData.functions.attachCheckboxListeners(locationRowsContainer);\n    }\n};\n\nconst getLocationReviewCount = async (accountId, locationId) => {\n    try {\n        const url = HSRevApi.urls.totalLocationReviews\n            .replace('%s', accountId.replace('accounts/', ''))\n            .replace('%s', locationId.replace('locations/', ''));\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-WP-Nonce': HSRevApi.nonce\n            }\n        });\n\n        if (!response.ok) {\n            throw new Error('Network response was not ok ' + response.statusText);\n        }\n\n        const data = await response.json();\n        return data.total || 0;\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n    }\n};\n\n// Prefetch all reviews for a location\nconst prefetchReviews = async (locationId) => {\n    try {\n        let allReviews = [];\n        let page = 1;\n\n        while (true) {\n            const url = `${HSRevApi.urls.locationReviewsBase.replace('%s', locationId.replace('locations/', ''))}?page=${page}&per_page=${perPage}`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': HSRevApi.nonce\n                }\n            });\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok ' + response.statusText);\n            }\n\n            const reviewsData = await response.json();\n            allReviews = allReviews.concat(reviewsData.reviews);\n\n            // Break if there are no more reviews to fetch\n            if (reviewsData.reviews.length < perPage) {\n                break;\n            }\n\n            page++;\n        }\n\n        window.HSRevData.data.reviewsCache = window.HSRevData.data.reviewsCache || {};\n        window.HSRevData.data.reviewsCache[locationId] = allReviews; // Cache all reviews\n\n        console.log('All Reviews for Location (prefetched):', allReviews);\n\n        // Initialize pagination\n        reviewsPage = 1;\n        populateReviews(reviewsPage, perPage);\n\n    } catch (error) {\n        console.error('There was a problem with the fetch operation:', error);\n    }\n};\n\n// Populate reviews for the current page\nconst populateReviews = (page, perPage) => {\n    const reviewRowsContainer = document.getElementById('review-rows');\n    const locationId = window.HSRevData.data.locationId;\n    const reviews = window.HSRevData.data.reviewsCache[locationId] || [];\n    const start = (page - 1) * perPage;\n    const end = start + perPage;\n    const paginatedReviews = reviews.slice(start, end);\n\n    const reviewRows = paginatedReviews.map(review => {\n        const isChecked = window.HSRevData.data.selectedReviews.has(review.review_id);\n        const reviewRow = document.createElement('div');\n        reviewRow.classList.add('rows');\n        reviewRow.innerHTML = `\n            <div class=\"row-item\">\n                <input type=\"checkbox\" name=\"selected-review-${review.review_id}\" value=\"${review.review_id}\" ${isChecked ? 'checked' : ''}>\n                <div class=\"row-item__cell\" data-type=\"reviewer\">${review.reviewer_display_name}</div>\n                <div class=\"row-item__cell\" data-type=\"rating\">${review.star_rating}</div>\n                <div class=\"row-item__cell\" data-type=\"comment\">${review.comment}</div>\n                <div class=\"row-item__cell\" data-type=\"date\">${new Date(review.create_time).toLocaleDateString()}</div>\n            </div>\n        `;\n        return reviewRow;\n    });\n\n    reviewRowsContainer.innerHTML = '';\n    reviewRowsContainer.append(...reviewRows);\n\n    if (window.HSRevData.functions.selectAllReviews) {\n        const selectAllReviewsCheckBox = document.getElementById('select-all-reviews');\n        selectAllReviewsCheckBox.checked = paginatedReviews.every(review => window.HSRevData.data.selectedReviews.has(review.review_id));\n        selectAllReviewsCheckBox.addEventListener('change', () => {\n            selectAllReviews(selectAllReviewsCheckBox, paginatedReviews);\n            window.HSRevData.functions.attachCheckboxListeners(reviewRowsContainer);\n        });\n    }\n};\n\n// Expose functions to the global scope\nwindow.HSRevData = window.HSRevData || {};\nwindow.HSRevData.functions = window.HSRevData.functions || {};\nwindow.HSRevData.functions.getLocations = getLocations;\nwindow.HSRevData.functions.prefetchReviews = prefetchReviews;\n"],"names":["urlParams","getUsers","getAccountLocationsUrl","accountId","reviewsPage","perPage","accountRowsContainer","loading","response","data","populateAccounts","error","accountsData","accountRows","account","accountLength","getAccountLocationsLength","accountRow","url","getLocations","locationRowsContainer","locationsCache","populateLocations","locationsData","locationRows","locationsArray","location","reviewCount","getLocationReviewCount","locationRow","locationId","prefetchReviews","allReviews","page","reviewsData","populateReviews","reviewRowsContainer","reviews","start","end","paginatedReviews","reviewRows","review","isChecked","reviewRow","selectAllReviewsCheckBox"],"mappings":"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"}