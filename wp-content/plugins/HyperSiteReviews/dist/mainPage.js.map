{"version":3,"file":"mainPage.js","sources":["../admin/js/main-page.js"],"sourcesContent":["import {updatePaginationControls, showPageReviews, updateButtonState} from './forms.js'\n\nconst reviewsInitializedEvent = new Event('reviewsInitialized');\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const getSelectedLocation = () => {\n    return new Promise(async (resolve, reject) => {\n        const response = await fetch(window.HSRevApi.urls.selectedLocation, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-WP-Nonce': HSRevApi.nonce\n                }\n            });\n\n            if (!response.ok) {\n                reject('Network response was not ok ' + response.statusText);\n            }\n\n            const locationsData = await response.json();\n\n            resolve(locationsData);\n        })\n}\n\nconst getSelectedLocationReviews = (locationId, page = 1) => {\n    return new Promise(async (resolve, reject) => {\n        let reviewsBatch = []\n        let totalPages = 1\n\n        do {\n            const response = await fetch(window.HSRevApi.urls.locationReviewsBase.replace('locations/%s', locationId) + '?' + new URLSearchParams({\n                'per_page': 100,\n                'page': page\n                }), {\n                    method: 'GET',\n                    headers: {\n                        'Content-Type': 'application/json',\n                        'X-WP-Nonce': HSRevApi.nonce\n                    }\n                });\n\n            if (!response.ok) {\n                reject('Network response was not ok ' + response.statusText);\n            }\n\n            const reviews = await response.json();\n\n            totalPages = reviews['total_pages'];\n\n            reviews['reviews'].forEach(r => {\n                reviewsBatch.push(r)\n            });\n\n            page++\n        } while (page <= totalPages);\n            resolve(reviewsBatch);\n    })\n}\n    const firstReviewPage = document.getElementById('initial-reviews');\n    const reviewsTable = document.getElementById('reviews-table')\n    const reviewsPerPageSelect = document.getElementById('reviews-per-page')\n\n    if (window.HSRevApi) {\n        getSelectedLocation()\n        .then(data => { \n            const locID = data['location_id'];\n            return getSelectedLocationReviews(locID)\n        })\n        .then(reviews => {\n            // Reviews per page\n            const rpp = parseInt(reviewsPerPageSelect.selectedOptions[0].value);\n            console.log(reviews)\n\n            // Clear the first review page\n            firstReviewPage.innerHTML = '';\n\n            // Total number of pages to generate\n            const numPages = Math.ceil(reviews.length / rpp);\n\n            for(let i = 0; i < numPages; i++) {\n                const isFirstPage = i === 0;\n                // Our temporary page, either the firstReviewPage, or creating a new div element\n                const page = isFirstPage ? firstReviewPage : document.createElement('div');\n\n                const row = document.createElement('div');\n                row.classList.add('rows');\n\n                // Setting the data-page attribute and reviews-page class if not already set\n                page.setAttribute('data-page', i + 1);\n                page.classList.add('reviews-page');\n\n                // For every nth review, where n = reviews per page (rpp), append a row\n                for(let j = 0; j < rpp; j++) {\n                    const review = reviews[(i * rpp) + j];\n                    if (!review) continue;\n                    // Create new row item\n                    row.innerHTML += `\n                        <div class=\"row-item\">\n                            <input type=\"checkbox\" name=\"selected-review-${review.review_id}\" value=\"${review.review_id}\" ${parseInt(review.is_selected) ? 'checked' : ''}>\n                            <div class=\"row-item__cell\" data-type=\"reviewer\">${review.reviewer_display_name}</div>\n                            <div class=\"row-item__cell\" data-type=\"rating\">${review.star_rating}</div>\n                            <div class=\"row-item__cell\" data-type=\"comment\">${review.comment}</div>\n                            <div class=\"row-item__cell\" data-type=\"date\">${new Date(review.create_time).toLocaleDateString()}</div>\n                        </div>\n                    `;\n\n                    page.appendChild(row);\n                }\n\n                // If this is not the firstReview page, insert it after the initial firstReviewPage\n                if( !isFirstPage ) {\n                    reviewsTable.appendChild(page)\n                } else {\n                    continue;\n                }\n\n            }\n\n            document.dispatchEvent(reviewsInitializedEvent);\n\n            // Setup pagination after populating reviews\n            updatePaginationControls(reviews.length, 1, rpp);\n            showPageReviews(1);\n            updateButtonState();\n\n        })\n        .catch(e => {\n            console.error('Error with promise: ', e)\n        })\n    }\n})\n"],"names":["reviewsInitializedEvent","getSelectedLocation","resolve","reject","response","locationsData","getSelectedLocationReviews","locationId","page","reviewsBatch","totalPages","reviews","r","firstReviewPage","reviewsTable","reviewsPerPageSelect","data","locID","rpp","numPages","i","isFirstPage","row","j","review","updatePaginationControls","showPageReviews","updateButtonState"],"mappings":"6CAEA,MAAMA,EAA0B,IAAI,MAAM,oBAAoB,EAE9D,SAAS,iBAAiB,mBAAoB,SAAY,CACtD,MAAMC,EAAsB,IACrB,IAAI,QAAQ,MAAOC,EAASC,IAAW,CAC1C,MAAMC,EAAW,MAAM,MAAM,OAAO,SAAS,KAAK,iBAAkB,CAC5D,OAAQ,MACR,QAAS,CACL,eAAgB,mBAChB,aAAc,SAAS,KAC3C,CACA,CAAa,EAEIA,EAAS,IACVD,EAAO,+BAAiCC,EAAS,UAAU,EAG/D,MAAMC,EAAgB,MAAMD,EAAS,KAAM,EAE3CF,EAAQG,CAAa,CACxB,CAAA,EAGHC,EAA6B,CAACC,EAAYC,EAAO,IAC5C,IAAI,QAAQ,MAAON,EAASC,IAAW,CAC1C,IAAIM,EAAe,CAAA,EACfC,EAAa,EAEjB,EAAG,CACC,MAAMN,EAAW,MAAM,MAAM,OAAO,SAAS,KAAK,oBAAoB,QAAQ,eAAgBG,CAAU,EAAI,IAAM,IAAI,gBAAgB,CAClI,SAAY,IACZ,KAAQC,CACxB,CAAiB,EAAG,CACA,OAAQ,MACR,QAAS,CACL,eAAgB,mBAChB,aAAc,SAAS,KAC/C,CACA,CAAiB,EAEAJ,EAAS,IACVD,EAAO,+BAAiCC,EAAS,UAAU,EAG/D,MAAMO,EAAU,MAAMP,EAAS,KAAM,EAErCM,EAAaC,EAAQ,YAErBA,EAAQ,QAAW,QAAQC,GAAK,CAC5BH,EAAa,KAAKG,CAAC,CACnC,CAAa,EAEDJ,GACH,OAAQA,GAAQE,GACbR,EAAQO,CAAY,CAC3B,CAAA,EAEKI,EAAkB,SAAS,eAAe,iBAAiB,EAC3DC,EAAe,SAAS,eAAe,eAAe,EACtDC,EAAuB,SAAS,eAAe,kBAAkB,EAEnE,OAAO,UACPd,EAAmB,EAClB,KAAKe,GAAQ,CACV,MAAMC,EAAQD,EAAK,YACnB,OAAOV,EAA2BW,CAAK,CAC1C,CAAA,EACA,KAAKN,GAAW,CAEb,MAAMO,EAAM,SAASH,EAAqB,gBAAgB,CAAC,EAAE,KAAK,EAClE,QAAQ,IAAIJ,CAAO,EAGnBE,EAAgB,UAAY,GAG5B,MAAMM,EAAW,KAAK,KAAKR,EAAQ,OAASO,CAAG,EAE/C,QAAQE,EAAI,EAAGA,EAAID,EAAUC,IAAK,CAC9B,MAAMC,EAAcD,IAAM,EAEpBZ,EAAOa,EAAcR,EAAkB,SAAS,cAAc,KAAK,EAEnES,EAAM,SAAS,cAAc,KAAK,EACxCA,EAAI,UAAU,IAAI,MAAM,EAGxBd,EAAK,aAAa,YAAaY,EAAI,CAAC,EACpCZ,EAAK,UAAU,IAAI,cAAc,EAGjC,QAAQe,EAAI,EAAGA,EAAIL,EAAKK,IAAK,CACzB,MAAMC,EAASb,EAASS,EAAIF,EAAOK,CAAC,EAC/BC,IAELF,EAAI,WAAa;AAAA;AAAA,2EAEsCE,EAAO,SAAS,YAAYA,EAAO,SAAS,KAAK,SAASA,EAAO,WAAW,EAAI,UAAY,EAAE;AAAA,+EAC1FA,EAAO,qBAAqB;AAAA,6EAC9BA,EAAO,WAAW;AAAA,8EACjBA,EAAO,OAAO;AAAA,2EACjB,IAAI,KAAKA,EAAO,WAAW,EAAE,mBAAkB,CAAE;AAAA;AAAA,sBAIxGhB,EAAK,YAAYc,CAAG,EACxC,CAGgB,GAAI,CAACD,EACDP,EAAa,YAAYN,CAAI,MAE7B,SAGpB,CAEY,SAAS,cAAcR,CAAuB,EAG9CyB,EAAyBd,EAAQ,OAAQ,EAAGO,CAAG,EAC/CQ,EAAgB,CAAC,EACjBC,EAAmB,CAEtB,CAAA,EACA,MAAM,GAAK,CACR,QAAQ,MAAM,uBAAwB,CAAC,CAC1C,CAAA,CAET,CAAC"}