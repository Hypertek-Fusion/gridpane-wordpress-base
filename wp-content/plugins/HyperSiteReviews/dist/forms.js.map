{"version":3,"file":"forms.js","sources":["../admin/js/forms.js"],"sourcesContent":["let pages = null; \nlet currentPage = 0;\nlet reviewsPerPage = 10; // Default reviews per page\nlet prevButton = null;\nlet nextButton = null;\n\ndocument.addEventListener('reviewsInitialized', () => {\n    let params = new URLSearchParams(document.location.search);\n    const pagePath = params.get('page');\n\n    if(pagePath === 'hypersite-reviews-setup') {\n        pages = document.querySelectorAll('.setup-page')\n    } else {\n        pages = document.querySelectorAll('.reviews-page')\n    }\n    prevButton = document.querySelector('.page-prev');\n    nextButton = document.querySelector('.page-next');\n\n    // Initialize window.HSRevData if not already done\n    window.HSRevData = window.HSRevData || {};\n    window.HSRevData.functions = window.HSRevData.functions || {};\n    window.HSRevData.data = window.HSRevData.data || {};\n    window.HSRevData.data.selectedReviews = new Set();\n\n    // Prevent default form submission\n    const form = document.querySelector('form');\n    form.addEventListener('submit', (e) => {\n        e.preventDefault(); // Prevents the form from being submitted\n        submitForm(); // Handle form submission\n    });\n\n    const getCheckedAccountId = () => {\n        const selectedCheckbox = pages[0].querySelector('input[type=\"checkbox\"]:checked');\n        if (selectedCheckbox) {\n            return selectedCheckbox.closest('.row-item').dataset.accountId;\n        }\n        return null;\n    };\n\n    const getCheckedLocationId = () => {\n        const selectedCheckbox = pages[1].querySelector('input[type=\"checkbox\"]:checked');\n        if (selectedCheckbox) {\n            return selectedCheckbox.closest('.row-item').dataset.locationId;\n        }\n        return null;\n    };\n\n    const attachCheckboxListeners = (container) => {\n        const checkboxes = container.querySelectorAll('input[type=\"checkbox\"]');\n        checkboxes.forEach(c => {\n            c.addEventListener('change', e => {\n                const clickedCheckbox = e.target;\n                const reviewId = clickedCheckbox.value;\n                if (clickedCheckbox.checked) {\n                    window.HSRevData.data.selectedReviews.add(reviewId);\n                } else {\n                    window.HSRevData.data.selectedReviews.delete(reviewId);\n                }\n                updateHiddenInput();\n                updateButtonState();\n            });\n        });\n    };\n\n    const showPage = (index) => {\n        pages.forEach((page, i) => {\n            page.style.display = i === index ? 'block' : 'none';\n        });\n\n        prevButton.disabled = index === 0;\n        updateButtonState();\n    };\n\n    showPage(currentPage);\n\n    prevButton.addEventListener('click', () => {\n        if (currentPage > 0) {\n            currentPage--;\n            showPage(currentPage);\n        }\n    });\n\n    nextButton.addEventListener('click', () => {\n        if (currentPage < pages.length - 1 && isAnyCheckboxCheckedOnCurrentPage()) {\n            if (currentPage === 0) {\n                const accountId = getCheckedAccountId();\n                if (accountId && window.HSRevData.functions.getLocations) {\n                    if (window.HSRevData.data.accountId !== accountId) {\n                        console.log('Account changed, clearing location cache');\n                        window.HSRevData.data.locationsCache = {};\n                    }\n                    window.HSRevData.functions.getLocations(accountId);\n                    window.HSRevData.data.accountId = accountId;\n                    console.log(`Account ID set: ${accountId}`);\n                }\n            } else if (currentPage === 1) {\n                const locationId = getCheckedLocationId();\n                if (locationId && window.HSRevData.functions.prefetchReviews) {\n                    if (window.HSRevData.data.locationId !== locationId) {\n                        console.log('Location changed, clearing review cache');\n                        window.HSRevData.data.reviewsCache = {};\n                    }\n                    window.HSRevData.functions.prefetchReviews(locationId);\n                    window.HSRevData.data.locationId = locationId;\n                    console.log(`Location ID set: ${locationId}`);\n                }\n            }\n            currentPage++;\n            showPage(currentPage);\n        } else if (currentPage === 2 && isAnyCheckboxCheckedOnCurrentPage()) {\n            form.submit(); // Only submit the form when on the last page\n        }\n    });\n\n    if (window.HSRevData && window.HSRevData.functions) {\n        window.HSRevData.functions.attachCheckboxListeners = attachCheckboxListeners;\n        window.HSRevData.functions.selectAllReviews = selectAllReviews;\n    }\n\n    if (pages[currentPage]) {\n        attachCheckboxListeners(pages[currentPage]);\n    }\n\n    // Pagination Functions\n    const reviewsPerPageSelect = document.getElementById('reviews-per-page');\n\n\n    const changePage = (newPage) => {\n        const totalPages = Math.ceil(getTotalItems() / reviewsPerPage);\n        if (newPage > 0 && newPage <= totalPages) {\n            currentPage = newPage;\n            showPageReviews(currentPage);\n        }\n    };\n\n    document.getElementById('page-prev').addEventListener('click', () => changePage(currentPage - 1));\n    document.getElementById('page-next').addEventListener('click', () => changePage(currentPage + 1));\n    reviewsPerPageSelect.addEventListener('change', function () {\n        reviewsPerPage = parseInt(this.value, 10);\n        currentPage = 1; // Reset to first page on perPage change\n        showPageReviews(currentPage);\n    });\n\n    showPageReviews(currentPage);\n});\n\nconst updatePaginationControls = (totalItems, currentPage, itemsPerPage) => {\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    document.getElementById('page-prev').disabled = currentPage <= 1;\n    document.getElementById('page-next').disabled = currentPage >= totalPages;\n};\n\nconst showPageReviews = (page) => {\n    const pages = document.querySelectorAll('.reviews-page');\n    pages.forEach((pageElement, index) => {\n        pageElement.style.display = (index + 1 === page) ? 'block' : 'none';\n    });\n\n    updatePaginationControls(getTotalItems(), currentPage, reviewsPerPage);\n};\n\nconst getTotalItems = () => {\n    return document.querySelectorAll('.review-row').length;\n};\n\nconst selectAllReviews = (element) => {\n    const reviewCheckboxes = pages[currentPage].querySelectorAll('input[name*=\"selected-review-\"][type=\"checkbox\"]');\n    const locationId = window.HSRevData.data.locationId;\n    const reviews = window.HSRevData.data.reviewsCache[locationId] || [];\n\n    Array.from(reviewCheckboxes).forEach(cb => {\n        const reviewId = cb.value;\n        cb.checked = element.checked;\n        if (element.checked) {\n            window.HSRevData.data.selectedReviews.add(reviewId);\n        } else {\n            window.HSRevData.data.selectedReviews.delete(reviewId);\n        }\n    });\n\n    updateHiddenInput();\n    updateButtonState();\n};\n\nconst updateHiddenInput = () => {\n    const hiddenInput = document.getElementById('selected_reviews');\n    const filteredReviewIds = Array.from(window.HSRevData.data.selectedReviews).filter(id => id.startsWith('AbFvOq'));\n    hiddenInput.value = filteredReviewIds.join(',');\n};\n\nconst updateButtonState = () => {\n    if (currentPage !== 2) {\n        nextButton.innerText = 'Next Page';\n    } else {\n        nextButton.innerText = 'Submit';\n    }\n    nextButton.disabled = !isAnyCheckboxCheckedOnCurrentPage();\n};\n\nconst isAnyCheckboxCheckedOnCurrentPage = () => {\n    console.log(pages)\n    const currentCheckboxes = pages[currentPage].querySelectorAll('input:not([name=\"select-all-reviews\"])[type=\"checkbox\"]');\n    return Array.from(currentCheckboxes).some(cb => cb.checked);\n};\n\nexport { updatePaginationControls, changePage, showPageReviews, selectAllReviews };\n"],"names":["pages","currentPage","reviewsPerPage","prevButton","nextButton","form","getCheckedAccountId","selectedCheckbox","getCheckedLocationId","attachCheckboxListeners","container","c","e","clickedCheckbox","reviewId","updateHiddenInput","updateButtonState","showPage","index","page","i","isAnyCheckboxCheckedOnCurrentPage","accountId","locationId","selectAllReviews","reviewsPerPageSelect","changePage","newPage","totalPages","getTotalItems","showPageReviews","updatePaginationControls","totalItems","itemsPerPage","pageElement","element","reviewCheckboxes","cb","hiddenInput","filteredReviewIds","id","currentCheckboxes"],"mappings":"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"}