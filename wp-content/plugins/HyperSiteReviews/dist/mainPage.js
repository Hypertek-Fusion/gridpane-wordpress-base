import{u as m,s as u,a as h}from"./forms.js";const g=new Event("reviewsInitialized");document.addEventListener("DOMContentLoaded",async()=>{const l=()=>new Promise(async(e,t)=>{const a=await fetch(window.HSRevApi.urls.selectedLocation,{method:"GET",headers:{"Content-Type":"application/json","X-WP-Nonce":HSRevApi.nonce}});a.ok||t("Network response was not ok "+a.statusText);const o=await a.json();e(o)}),w=(e,t=1)=>new Promise(async(a,o)=>{let r=[],i=1;do{const s=await fetch(window.HSRevApi.urls.locationReviewsBase.replace("locations/%s",e)+"?"+new URLSearchParams({per_page:100,page:t}),{method:"GET",headers:{"Content-Type":"application/json","X-WP-Nonce":HSRevApi.nonce}});s.ok||o("Network response was not ok "+s.statusText);const c=await s.json();i=c.total_pages,c.reviews.forEach(n=>{r.push(n)}),t++}while(t<=i);a(r)}),d=document.getElementById("initial-reviews"),p=document.getElementById("reviews-table"),v=document.getElementById("reviews-per-page");window.HSRevApi&&l().then(e=>{const t=e.location_id;return w(t)}).then(e=>{const t=parseInt(v.selectedOptions[0].value);console.log(e),d.innerHTML="";const a=Math.ceil(e.length/t);for(let o=0;o<a;o++){const r=o===0,i=r?d:document.createElement("div"),s=document.createElement("div");s.classList.add("rows"),i.setAttribute("data-page",o+1),i.classList.add("reviews-page");for(let c=0;c<t;c++){const n=e[o*t+c];n&&(s.innerHTML+=`
                        <div class="row-item">
                            <input type="checkbox" name="selected-review-${n.review_id}" value="${n.review_id}" ${parseInt(n.is_selected)?"checked":""}>
                            <div class="row-item__cell" data-type="reviewer">${n.reviewer_display_name}</div>
                            <div class="row-item__cell" data-type="rating">${n.star_rating}</div>
                            <div class="row-item__cell" data-type="comment">${n.comment}</div>
                            <div class="row-item__cell" data-type="date">${new Date(n.create_time).toLocaleDateString()}</div>
                        </div>
                    `,i.appendChild(s))}if(!r)p.appendChild(i);else continue}document.dispatchEvent(g),m(e.length,1,t),u(1),h()}).catch(e=>{console.error("Error with promise: ",e)})});
//# sourceMappingURL=mainPage.js.map
